language: cpp

env:
  global:
    - LANG="zh_CN.UTF-8"
    - CMAKE_PREFIX=$HOME/prebuilt/cmake ;
    - CMAKE_LINUX_URL=https://cmake.org/files/v3.10/cmake-3.10.0-Linux-x86_64.sh ;
    - PANDOC_PREFIX=$HOME/prebuilt/pandoc ;
    - PANDOC_LINUX_URL=https://github.com/jgm/pandoc/releases/download/2.0.4/pandoc-2.0.4-linux.tar.gz
    - DOXYGEN_PREFIX=$HOME/prebuilt/doxygen
    - DOXYGEN_LINUX_URL=http://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.13.linux.bin.tar.gz
matrix:
  include:
    - os: osx
      env: USE_CC=clang USE_CXX=clang++ CMAKE_BIN=cmake
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc USE_CXX=g++ CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-4.4 USE_CXX=g++-4.4 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-4.9 USE_CXX=g++-4.9 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-7 USE_CXX=g++-7 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=doxygen USE_CXX=doxygen PANDOC_BIN=$PANDOC_PREFIX/bin/pandoc DOXYGEN_BIN=$DOXYGEN_PREFIX/bin/doxygen
    # - os: linux
    #   dist: trusty
    #   sudo: required
    #   env: USE_CC=clang USE_CXX=clang++ CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
    # - os: linux
    #   dist: trusty
    #   sudo: required
    #   env: USE_CC=clang-3.8 USE_CXX=clang++-3.8 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      # - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.8 main'
      #   key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

    packages:
      - g++-4.4
      - g++-4.4-multilib
      - gcc-4.4
      - gcc-4.4-multilib
      - gcc-4.9
      - gcc-4.9-multilib
      - g++-4.9
      - g++-4.9-multilib
      - gcc-7
      - gcc-7-multilib
      - g++-7
      - g++-7-multilib
      - clang
      - graphviz
      ## - libc++1
      ## - libc++-dev
      ## - libc++abi1
      ## - libc++abi-dev
      # - clang-3.8
      # - libclang-common-3.8-dev
      # - libclang-3.8-dev

before_install:
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ulimit -a; sysctl -a; sudo apt-get -qq update; fi
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi

install:
    - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$USE_CC" != "doxygen" ] ; then
    
          if [ ! -e "$CMAKE_BIN" ]; then
            mkdir -p "$CMAKE_PREFIX";
            curl --insecure -L "$CMAKE_LINUX_URL" -o cmake-linux.sh ;
            bash cmake-linux.sh --skip-license --prefix=$CMAKE_PREFIX ;
          fi

      fi

    - if [ "$TRAVIS_OS_NAME" == "osx" ] ; then brew upgrade cmake; fi

script:
  - if [ "$USE_CC" == "doxygen" ]; then
      
      cd "docs";
      
      if [ ! -e "$PANDOC_BIN" ]; then
        mkdir -p "$PANDOC_PREFIX" ;
        curl --insecure -L "$PANDOC_LINUX_URL" -o pandoc-linux.tar.gz ;
        tar -axvf pandoc-linux.tar.gz ;
        PANDOC_DIR=$(ls -d pandoc-* | grep -v grep | grep -v ".tar.gz");
        cp -rf $PANDOC_DIR/* "$PANDOC_PREFIX";
      fi

      if [ ! -e "$DOXYGEN_BIN" ]; then
        mkdir -p "$DOXYGEN_PREFIX";
        curl --insecure -L "$DOXYGEN_LINUX_URL" -o doxygen.linux.bin.tar.gz ;
        tar -axvf doxygen.linux.bin.tar.gz ;
        DOXYGEN_DIR=$(ls -d doxygen-* | grep -v grep | grep -v ".tar.gz");
        cp -rf $DOXYGEN_DIR/* "$DOXYGEN_PREFIX";
      fi
      
      for MD_FILE in $(find .. -name "*.md"); do
        $PANDOC_BIN -f gfm -t markdown_strict -o "$MD_FILE" "$MD_FILE" ;
        echo "Convert md file $MD_FILE";
      done

      if [ -e doxygen/html ]; then
      
        rm -rf doxygen/html;
      
      fi
      
      $DOXYGEN_BIN libcopp.doxyfile;

      if [ -e doxygen/html ]; then
      
        cd doxygen/html ;
        
        echo "libcopp.atframe.work" > CNAME ;

        git init ;

        git add . ; 

        git -c user.name='travis' -c user.email='deploy@travis-ci.org' commit -m "Delpoy document for $TRAVIS_BRANCH($TRAVIS_COMMIT)";

        git push -f -q https://owt5008137:$GITHUB_API_KEY@github.com/owt5008137/libcopp-doc HEAD:master ;
      
      fi

    else

      export CC=$USE_CC

      export CXX=$USE_CXX

      REPO_DIR=$PWD ;

      mkdir -p $REPO_DIR/build && cd $REPO_DIR/build ;

      echo "$CMAKE_BIN .. -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX" ;

      $CMAKE_BIN .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX ;

      $CMAKE_BIN --build . ;

      echo "============================== run in thread-safe mode ==============================" ;

      make run_sample run_test benchmark ;

      rm -rf * ;

      echo "$CMAKE_BIN .. -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX -DPROJECT_DISABLE_MT=ON" ;

      $CMAKE_BIN .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX -DPROJECT_DISABLE_MT=ON ;

      echo "============================== run in thread-unsafe mode ==============================" ;

      make benchmark ;


    fi

cache: 
  apt: true
  ccache: true
  directories:
  - /home/travis/prebuilt
    
branches:
  only:
    - master
    - v2

notifications:
  email:
    recipients:
      - admin@owent.net
      - owt5008137@live.com
    on_success: change
    on_failure: change
  irc:
    template:
      - "%{repository}/%{branch} (%{commit} - %{author}): %{build_url}: %{message}"
