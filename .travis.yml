language: cpp

env:
  global:
    - LANG="zh_CN.UTF-8"
    - CMAKE_PREFIX=$HOME/prebuilt/cmake ;
    - CMAKE_LINUX_URL=https://cmake.org/files/v3.13/cmake-3.13.1-Linux-x86_64.sh ;
    - PANDOC_PREFIX=$HOME/prebuilt/pandoc ;
    - PANDOC_LINUX_URL=https://github.com/jgm/pandoc/releases/download/2.5/pandoc-2.5-linux.tar.gz
    - DOXYGEN_PREFIX=$HOME/prebuilt/doxygen
    - DOXYGEN_LINUX_URL=http://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.14.linux.bin.tar.gz
matrix:
  include:
    - os: osx
      env: USE_CC=clang USE_CXX=clang++ CMAKE_BIN=cmake
    - os: linux
      dist: xenial
      sudo: required
      env: USE_CC=gcc USE_CXX=g++ CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
    - os: linux
      dist: xenial
      sudo: required
      env: USE_CC=gcc-4.4 USE_CXX=g++-4.4 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.4
            - g++-4.4-multilib
            - gcc-4.4
            - gcc-4.4-multilib
    - os: linux
      dist: xenial
      sudo: required
      env: USE_CC=gcc-4.9 USE_CXX=g++-4.9 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
            - gcc-4.9-multilib
            - g++-4.9
            - g++-4.9-multilib
    - os: linux
      dist: xenial
      sudo: required
      env: USE_CC=gcc-8 USE_CXX=g++-8 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - gcc-8-multilib
            - g++-8
            - g++-8-multilib
    - os: linux
      dist: xenial
      sudo: required
      env: USE_CC=doxygen USE_CXX=doxygen PANDOC_BIN=$PANDOC_PREFIX/bin/pandoc DOXYGEN_BIN=doxygen CMAKE_BIN=$CMAKE_PREFIX/bin/cmake # DOXYGEN_BIN=$DOXYGEN_PREFIX/bin/doxygen
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            # - llvm-toolchain-xenial-6.0
          packages:
            - graphviz
            - doxygen
      script:
        - sudo apt-get install -f ;
        - REPO_DIR=$PWD ;
        - mkdir -p $REPO_DIR/build_for_doxygen && cd $REPO_DIR/build_for_doxygen ;
        - echo "$CMAKE_BIN .. -DLIBCOPP_FCONTEXT_USE_TSX=ON -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON" ;
        - $CMAKE_BIN .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLIBCOPP_FCONTEXT_USE_TSX=ON -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON ;
        - cd "$REPO_DIR/docs";
        - if [ "doxygen" != "$DOXYGEN_BIN" ] && [ ! -e "$DOXYGEN_BIN" ]; then

            mkdir -p "$DOXYGEN_PREFIX";

            curl --insecure -L "$DOXYGEN_LINUX_URL" -o doxygen.linux.bin.tar.gz ;

            tar -axvf doxygen.linux.bin.tar.gz ;

            DOXYGEN_DIR=$(ls -d doxygen-* | grep -v grep | grep -v ".tar.gz");

            cp -rf $DOXYGEN_DIR/* "$DOXYGEN_PREFIX";

          fi

          if [ -e doxygen/html ]; then
          
            rm -rf doxygen/html;
          
          fi
          
          $DOXYGEN_BIN libcopp.doxyfile;
      after_success:
        - if [ -e doxygen/html ]; then
          
            cd doxygen/html ;
            
            echo "libcopp.atframe.work" > CNAME ;

            git init ;

            git add . ; 

            git -c user.name='travis' -c user.email='deploy@travis-ci.org' commit -m "Delpoy document for $TRAVIS_BRANCH($TRAVIS_COMMIT)";

            git push -f -q https://owt5008137:$GITHUB_API_KEY@github.com/owt5008137/libcopp-doc HEAD:master ;
          
          fi
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USE_CC=clang USE_CXX=clang++ CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
    # - os: linux
    #   dist: xenial
    #   sudo: required
    #   env: USE_CC=clang-3.8 USE_CXX=clang++-3.8 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
    - os: linux
      dist: xenial
      sudo: required
      env: COVERALLS_SERVICE_NAME=travis-ci GCOV_FLAGS='--coverage -fprofile-arcs -ftest-coverage' CMAKE_BIN=$CMAKE_PREFIX/bin/cmake CTEST_BIN=$CMAKE_PREFIX/bin/ctest
      # COVERALLS_REPO_TOKEN is set in travis-ci
      script:
        - REPO_DIR=$PWD;
        - USE_MSGPACK_ROOT=$MSGPACK_PREFIX ;
        - if [ -e "$REPO_DIR/build" ]; then rm -rf "$REPO_DIR/build"; fi
        - mkdir -p $REPO_DIR/build && cd $REPO_DIR/build ;
        - $CMAKE_BIN .. "-DCMAKE_C_FLAGS=$GCOV_FLAGS" "-DCMAKE_CXX_FLAGS=$GCOV_FLAGS" "-DCMAKE_EXE_LINKER_FLAGS=$GCOV_FLAGS" -DCMAKE_BUILD_TYPE=Debug -DLIBCOPP_FCONTEXT_USE_TSX=ON -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON ;
        - $CMAKE_BIN --build .
      after_success:
        - make run_sample run_test benchmark ;
        - pip install --user cpp-coveralls
        - coveralls -r .. --gcov-options '\-lp' -e sample -e test -e build/CMakeFiles

before_install:
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ulimit -a; sysctl -a; sudo apt-get -qq update; fi
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi

install:
    - if [ "$TRAVIS_OS_NAME" == "linux" ] ; then
    
          if [ ! -e "$CMAKE_BIN" ]; then

            mkdir -p "$CMAKE_PREFIX";

            curl --insecure -L "$CMAKE_LINUX_URL" -o cmake-linux.sh ;

            bash cmake-linux.sh --skip-license --prefix=$CMAKE_PREFIX ;
            
          fi

      fi

    - if [ "$TRAVIS_OS_NAME" == "osx" ] ; then brew upgrade cmake; fi

script:
    - export CC=$USE_CC
    - export CXX=$USE_CXX
    - REPO_DIR=$PWD ;
    - mkdir -p $REPO_DIR/build && cd $REPO_DIR/build ;
    - echo "$CMAKE_BIN ..  -DLIBCOPP_FCONTEXT_USE_TSX=ON -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX" ;
    - $CMAKE_BIN .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLIBCOPP_FCONTEXT_USE_TSX=ON -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX ;
    - $CMAKE_BIN --build . ;
    - echo "============================== run in thread-safe mode ==============================" ;
    - make run_sample run_test benchmark ;
    - rm -rf * ;
    - echo "$CMAKE_BIN ..  -DLIBCOPP_FCONTEXT_USE_TSX=ON -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX -DPROJECT_DISABLE_MT=ON" ;
    - $CMAKE_BIN .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLIBCOPP_FCONTEXT_USE_TSX=ON -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX -DPROJECT_DISABLE_MT=ON ;
    - echo "============================== run in thread-unsafe mode ==============================" ;
    - make benchmark ;

cache: 
  apt: true
  ccache: true
  directories:
  - /home/travis/prebuilt
    
branches:
  only:
    - master
    - v2

notifications:
  email:
    recipients:
      - admin@owent.net
      - owt5008137@live.com
    on_success: change
    on_failure: change
  irc:
    template:
      - "%{repository}/%{branch} (%{commit} - %{author}): %{build_url}: %{message}"
