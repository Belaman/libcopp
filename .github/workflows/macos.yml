# setup @see https://help.github.com/en/articles/workflow-syntax-for-github-actions
# environment @see https://help.github.com/en/articles/software-in-virtual-environments-for-github-actions
#                  https://help.github.com/en/articles/virtual-environments-for-github-actions
# example     @see https://github.com/actions/toolkit/blob/master/.github/workflows/workflow.yml
name: macOS Building
# This workflow is triggered on pushes to the repository.
on: # @see https://help.github.com/en/articles/events-that-trigger-workflows#webhook-events
  push:
    branches: # Array of patterns that match refs/heads
      # - master # Push events on master branch
      - dev
  # schedule:
  #  - cron:  0 * * * *

jobs:
  build: # job id, can be any string
    # Job name is Build And Publish
    name: Build And Publish
    # This job runs on Linux
    strategy:
      matrix:
        os: [macos-latest]
        cc:
          - clang
          # - shared:clang
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@master # https://github.com/actions/actions
      - name: Build
        shell: bash
        run: |
          PROJECT_ADDON_OPTIONS=()
          USE_CC=${{ matrix.cc }}
          if [[ "x${USE_CC:0:7}" == "xshared:" ]]; then
            USE_CC=${USE_CC:7}
            PROJECT_ADDON_OPTIONS=(${PROJECT_ADDON_OPTIONS[@]} "-DBUILD_SHARED_LIBS=ON")
          fi
          if [[ "x${USE_CC:0:14}" == "xthread-unsafe:" ]]; then
            USE_CC=${USE_CC:14}
            PROJECT_ADDON_OPTIONS=(${PROJECT_ADDON_OPTIONS[@]} "-DLIBCOPP_DISABLE_ATOMIC_LOCK=ON" "-DLIBCOPP_DISABLE_THIS_MT=ON")
          fi
          USE_CXX="${USE_CC/%clang/clang++}"
          USE_CXX="${USE_CXX/%gcc/g++}"
          mkdir -p "$GITHUB_WORKSPACE/build_jobs_dir_linux"
          cd "$GITHUB_WORKSPACE/build_jobs_dir_linux"
          cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLIBCOPP_FCONTEXT_USE_TSX=ON -DPROJECT_ENABLE_UNITTEST=ON -DPROJECT_ENABLE_SAMPLE=ON -DCMAKE_C_COMPILER=$USE_CC -DCMAKE_CXX_COMPILER=$USE_CXX ${PROJECT_ADDON_OPTIONS[@]}
          cmake --build . -j
      - name: Sample and Tests
        shell: bash
        run: |
          cd "$GITHUB_WORKSPACE/build_jobs_dir_linux"
          ORIGIN_CC=${{ matrix.cc }}
          if [[ "x${ORIGIN_CC:0:7}" == "xshared:" ]]; then
            ORIGIN_CC=${ORIGIN_CC:7}
          fi
          if [[ "x${ORIGIN_CC:0:14}" == "xthread-unsafe:" ]]; then
            ORIGIN_CC=${ORIGIN_CC:14}
            echo "============================== run benchmark =============================="
            cmake --build . -- benchmark
          else
            echo "============================== run sample,test,benchmark =============================="
            cmake --build . -- run_sample run_test benchmark
          fi
          rm -rf *
